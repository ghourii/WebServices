//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdpDataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ADP_PC1Entities : DbContext
    {
        public ADP_PC1Entities()
            : base("name=ADP_PC1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_adp> tbl_adp { get; set; }
        public virtual DbSet<tbl_mne_master> tbl_mne_master { get; set; }
        public virtual DbSet<tbl_PC1> tbl_PC1 { get; set; }
        public virtual DbSet<tbl_PC1_ADP_serial> tbl_PC1_ADP_serial { get; set; }
        public virtual DbSet<tbl_Sectors> tbl_Sectors { get; set; }
        public virtual DbSet<tbl_AdpBook_multipleDist> tbl_AdpBook_multipleDist { get; set; }
        public virtual DbSet<tbl_Department> tbl_Department { get; set; }
        public virtual DbSet<tbl_SubSectors> tbl_SubSectors { get; set; }
        public virtual DbSet<tbl_Distt> tbl_Distt { get; set; }
        public virtual DbSet<tbl_Division> tbl_Division { get; set; }
        public virtual DbSet<tbl_Sponsoring_Agency> tbl_Sponsoring_Agency { get; set; }
        public virtual DbSet<tbl_Executing_Agency> tbl_Executing_Agency { get; set; }
        public virtual DbSet<tbl_tehsil> tbl_tehsil { get; set; }
        public virtual DbSet<tbl_ADP_Serial> tbl_ADP_Serial { get; set; }
    
        public virtual ObjectResult<Rest_Get_Adp_Detail_Result> Rest_Get_Adp_Detail(string serail, Nullable<int> year, Nullable<int> sector, Nullable<int> subsector)
        {
            var serailParameter = serail != null ?
                new ObjectParameter("serail", serail) :
                new ObjectParameter("serail", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var sectorParameter = sector.HasValue ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(int));
    
            var subsectorParameter = subsector.HasValue ?
                new ObjectParameter("subsector", subsector) :
                new ObjectParameter("subsector", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rest_Get_Adp_Detail_Result>("Rest_Get_Adp_Detail", serailParameter, yearParameter, sectorParameter, subsectorParameter);
        }
    
        public virtual ObjectResult<Get_All_ADP_Years_Result> Get_All_ADP_Years()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_ADP_Years_Result>("Get_All_ADP_Years");
        }
    
        public virtual ObjectResult<GetAllAdps_Result> GetAllAdps()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAdps_Result>("GetAllAdps");
        }
    
        public virtual ObjectResult<Rest_Get_Adp_Detail_ByProject_Result> Rest_Get_Adp_Detail_ByProject(Nullable<int> project)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rest_Get_Adp_Detail_ByProject_Result>("Rest_Get_Adp_Detail_ByProject", projectParameter);
        }
    
        public virtual ObjectResult<Rest_Get_Adp_Detail_Year_Wise_Result> Rest_Get_Adp_Detail_Year_Wise(Nullable<int> project, Nullable<int> year)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rest_Get_Adp_Detail_Year_Wise_Result>("Rest_Get_Adp_Detail_Year_Wise", projectParameter, yearParameter);
        }
    }
}
